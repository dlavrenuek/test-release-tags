name: Create a draft release

on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'Or enter a commit to use (HEAD of the selected branch if empty)'
        required: false
        default: ''

jobs:
  create_draft_release:
    runs-on: ubuntu-latest
    steps:

      - name: Set commitish
        id: set-commitish
        run: |-
          if [[ -z "${{ github.event.inputs.commit }}" ]]; then
            # no commit is entered
            echo "::set-output name=commitish::$GITHUB_SHA";
          else
            echo "::set-output name=commitish::${{ github.event.inputs.commit }}";
          fi

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Determinate latest released tag
        id: current-tag
        run: |-
          branch=${GITHUB_REF#refs/heads/}
          tag=$( git tag -l --merged "$branch" "v*.*.*" --sort=-committerdate | head -n 1 );
          echo "::set-output name=tag::$tag";

      - name: Parse version
        id: current-version
        run: |-
          [[ "${{ steps.current-tag.outputs.tag }}" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)(-[A-Z0-9]+){0,1}$ ]]
          echo "::set-output name=major::${BASH_REMATCH[1]}";
          echo "::set-output name=minor::${BASH_REMATCH[2]}";
          echo "::set-output name=patch::${BASH_REMATCH[3]}";

      - name: Generate changelog
        uses: ./actions/generate-changelog
        id: changelog
        with:
          from: ${{ steps.current-tag.outputs.tag }}
          to: ${{ steps.set-commitish.outputs.commitish }}

      - name: Print changelog
        run: echo "${{ steps.changelog.outputs.changelog }}"
#
#      - uses: release-drafter/release-drafter@v5
#        with:
#          config-name: release-drafter-onprem.yml
#          commitish: ${{ steps.set-commitish.outputs.commitish }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
